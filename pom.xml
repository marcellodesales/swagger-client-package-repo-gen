<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.marcellodesales</groupId>
    <artifactId>swagger-client-package-repo-gen</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>swagger-client-package-repo-gen</name>
    <url>https://github.com/marcellodesales/swagger-client-package-repo-gen</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <swagger-annotations-version>2.1.5</swagger-annotations-version>
        <jersey-version>2.29.1</jersey-version>
        <jackson-version>2.12.4</jackson-version>
        <jodatime-version>2.7</jodatime-version>
        <maven-plugin-version>1.0.0</maven-plugin-version>
        <junit-version>4.13.1</junit-version>
        <!-- https://issues.apache.org/jira/browse/MDEP-82 -->
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <surefire-junit-platform.version>2.22.2</surefire-junit-platform.version>
    </properties>

    <build>
        <plugins>
            <!-- Offiline dependencies downloader -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit-platform</artifactId>
                <version>${surefire-junit-platform.version}</version>
            </plugin>
            <!-- Attach the sources to the client jar -->
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-source-plugin</artifactId>
			  <version>3.2.1</version>
			  <executions>
			    <execution>
			      <id>attach-sources</id>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>
            <!-- activate the plugin -->
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.4.17</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- specify the swagger yaml -->
                            <inputSpec>/schemas/${env.SCHEMA_FILE_NAME}</inputSpec>

                            <!-- target to generate java client code -->
                            <language>${env.GENERATE_CLIENT_LANG}</language>

                            <!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->

                            <!-- pass any necessary config options -->
                            <configOptions>
                                <dateLibrary>joda</dateLibrary>
                            </configOptions>

                            <output>${project.basedir}/client-api</output>

                            <!-- override the default library to resttemplate -->
                            <library>${env.GENERATE_CLIENT_WITH_LIBRARY}</library>
                            <modelPackage>${env.GENERATE_CLIENT_MODEL_PACKAGE}</modelPackage>
                            <apiPackage>${env.GENERATE_CLIENT_API_PACKAGE}</apiPackage>
                            <invokerPackage>${env.GENERATE_CLIENT_INVOKER_PACKAGE}</invokerPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
         <!-- dependencies are needed for the client being generated -->

<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->

        <dependency>
          <groupId>io.swagger.core.v3</groupId>
          <artifactId>swagger-annotations</artifactId>
          <version>${swagger-annotations-version}</version>
        </dependency>

        <!-- You can find the dependencies for the library configuation you chose by looking in JavaClientCodegen.
             Then find the corresponding dependency on Maven Central, and set the versions in the property section below -->

        <!-- HTTP client: jersey-client -->
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-client</artifactId>
          <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
          <artifactId>jackson-jaxrs-json-provider</artifactId>
          <version>${jackson-version}</version>
        </dependency>

        <!-- Joda time: if you use it -->
        <dependency>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-joda</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>${jodatime-version}</version>
        </dependency>

        <!-- Base64 encoding that works in both JVM and Android -->
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>

</project>
